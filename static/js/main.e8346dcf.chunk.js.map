{"version":3,"sources":["components/ui/Header.js","components/ui/Footer.js","components/WeatherCard.js","components/AllWeatherGrid.js","components/WeatherPage.js","App.js","index.js"],"names":["Header","Footer","className","href","WeatherCard","selectDay","dayNum","weekdayArr","localDate","Date","weatherObj","getDay","day","highLow","condition","Fragment","alt","AllWeatherGrid","days","map","to","selectedDay","WeatherPage","dataArr","App","fakeWeatherDataArr","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8346dcf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>react-weather-app</h1>\r\n    </header>\r\n\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='footer'>\r\n        <p>Made with luv by <a href='https://github.com/milkndcoffee/'>milkndcoffee</a></p>\r\n        <p>Hosted on Github pages</p>\r\n        <a href='https://github.com/milkndcoffee/react-weather-app'>Source Code</a>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst WeatherCard = ({ dayNum, weekdayArr }) => {\r\n\r\n  let localDate = new Date();\r\n\r\n  const getCurrDayObj = () => {\r\n    let day = weekdayArr[localDate.getDay()].day;\r\n    let highLow = weekdayArr[localDate.getDay()].highLow;\r\n    let condition = weekdayArr[localDate.getDay()].condition;\r\n    let dayObj = { 'day': day, 'highLow': highLow, 'condition': condition };\r\n    return dayObj;\r\n  }\r\n  const getSelectDayObj = (selectDay) => {\r\n    let day = weekdayArr[selectDay].day;\r\n    let highLow = weekdayArr[selectDay].highLow;\r\n    let condition = weekdayArr[selectDay].condition;\r\n    let dayObj = { 'day': day, 'highLow': highLow, 'condition': condition };\r\n    return dayObj;\r\n  }\r\n\r\n  //if dayNum unset, let default value else let weatherObj be selected Val\r\n  const weatherObj = dayNum === '' ? getCurrDayObj() : getSelectDayObj(dayNum);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='cardContainer'>\r\n        <div>\r\n          <h2>{weatherObj.day}</h2>\r\n        </div>\r\n        <img alt='weather-img' className='imgPlaceholder' />\r\n        <p className='condition'>{weatherObj.condition}</p>\r\n        <div>\r\n          <h2>\r\n            {weatherObj.highLow[0]}/\r\n          {weatherObj.highLow[1]}\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default WeatherCard\r\n","import React from 'react';\r\nimport WeatherCard from './WeatherCard';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AllWeatherGrid = ({ days, selectDay }) => {\r\n\r\n  let localDate = new Date();\r\n  selectDay = selectDay === '' ? days[localDate.getDay()].day : days[selectDay].day;\r\n\r\n  const selectedDay = (day) => {\r\n    return '/' + day;\r\n  }\r\n\r\n  return (\r\n    <div className='gridContainer'>\r\n      {days.map((day, dayNum) => (\r\n        <div className={day.day === selectDay ? 'outlineThis' : ''}>\r\n          <Link to={() => selectedDay(day.day)}>\r\n            <button>\r\n              <WeatherCard dayNum={dayNum} weekdayArr={days} />\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default AllWeatherGrid\r\n","import React from 'react';\r\nimport WeatherCard from './WeatherCard'\r\nimport AllWeatherGrid from './AllWeatherGrid';\r\n\r\nconst WeatherPage = ({dataArr, selectDay}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <WeatherCard dayNum={selectDay} weekdayArr={dataArr} />\r\n      <AllWeatherGrid days={dataArr} selectDay={selectDay} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default WeatherPage;\r\n","import React from 'react';\nimport Header from './components/ui/Header';\nimport Footer from './components/ui/Footer';\nimport WeatherPage from './components/WeatherPage';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\n//styling\nimport './App.css';\n\nfunction App() {\n  const fakeWeatherDataArr = [\n    { 'day': 'Sunday', 'highLow': [71, 59], 'condition': 'Cloudy' },\n    { 'day': 'Monday', 'highLow': [80, 62], 'condition': 'Cloudy' },\n    { 'day': 'Tuesday', 'highLow': [86, 70], 'condition': 'Sunny' },\n    { 'day': 'Wednesday', 'highLow': [88, 69], 'condition': 'Sunny' },\n    { 'day': 'Thursday', 'highLow': [79, 63], 'condition': 'Cloudy' },\n    { 'day': 'Friday', 'highLow': [63, 55], 'condition': 'Showers' },\n    { 'day': 'Saturday', 'highLow': [72, 60], 'condition': 'Cloudy' }\n  ]\n\n  //rendering\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header />\n        <main>\n          <Route exact path=\"/\">\n            <WeatherPage dataArr={fakeWeatherDataArr} selectDay={''} />\n          </Route>\n          <Route exact path=\"/sunday\">\n            <WeatherPage dataArr={fakeWeatherDataArr} selectDay={0} />\n          </Route>\n          <Route exact path=\"/monday\">\n            <WeatherPage dataArr={fakeWeatherDataArr} selectDay={1} />\n          </Route>\n          <Route exact path=\"/tuesday\">\n            <WeatherPage dataArr={fakeWeatherDataArr} selectDay={2} />\n          </Route>\n          <Route exact path=\"/wednesday\">\n            <WeatherPage dataArr={fakeWeatherDataArr} selectDay={3} />\n          </Route>\n          <Route exact path=\"/thursday\">\n            <WeatherPage dataArr={fakeWeatherDataArr} selectDay={4} />\n          </Route>\n          <Route exact path=\"/friday\">\n            <WeatherPage dataArr={fakeWeatherDataArr} selectDay={5} />\n          </Route>\n          <Route exact path=\"/saturday\">\n            <WeatherPage dataArr={fakeWeatherDataArr} selectDay={6} />\n          </Route>\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}